<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 로그인 및 로그인 이전에 할 수 있는 동작(회원가입, 비밀번호 찾기 등) 관련 쿼리 -->
<mapper namespace="com.amiiboroom.ordercollector.dao.TADao">

<insert id="TAI01">
--.TAI01 유저 회원가입
--^
<![CDATA[

INSERT INTO USERS
 (
   USER_ID
  ,USER_PW
  ,EMAIL
  ,USER_NAME
  ,STATUS
  ,USER_PER
  ,INS_USER
  ,UPD_USER
 )
WITH TMP_ACC AS
 (
  SELECT A.H_USER_ID   H_USER_ID
        ,A.H_USER_PW   H_USER_PW
        ,A.H_EMAIL     H_EMAIL
        ,A.H_USER_NAME H_USER_NAME
        ,A.H_USER_PER  H_USER_PER
    FROM (
          SELECT COALESCE(TRIM(#{USER_ID}  ), '') H_USER_ID
                ,COALESCE(TRIM(#{USER_PW}  ), '') H_USER_PW
                ,COALESCE(TRIM(#{EMAIL}    ), '') H_EMAIL
                ,COALESCE(TRIM(#{USER_NAME}), '') H_USER_NAME
                ,COALESCE(TRIM(#{USER_PER} ), '') H_USER_PER
--          SELECT COALESCE(TRIM('admin'), '') H_USER_ID
--                ,COALESCE(TRIM('admin'), '') H_USER_PW
--                ,COALESCE(TRIM('admin'), '') H_EMAIL
--                ,COALESCE(TRIM('admin'), '') H_USER_NAME
--                ,COALESCE(TRIM('admin'), '') H_USER_PER
         ) A
 )
,TMP_M AS
 (
  SELECT A.H_USER_ID   H_USER_ID
        ,A.H_USER_PW   H_USER_PW
        ,A.H_EMAIL     H_EMAIL
        ,A.H_USER_NAME H_USER_NAME
        ,A.H_USER_PER  H_USER_PER
    FROM TMP_ACC A
        LEFT OUTER JOIN
         USERS B
        ON B.USER_ID = A.H_USER_ID
   WHERE B.USER_ID IS NULL
 )
SELECT A.H_USER_ID   USER_ID
      ,A.H_USER_PW   USER_PW
      ,A.H_EMAIL     EMAIL
      ,A.H_USER_NAME USER_NAME
      ,'P'           STATUS
      ,H_USER_PER    USER_PER
      ,'SYSTEM'      INS_USER
      ,'SYSTEM'      UPD_USER
  FROM TMP_M A
  ;

]]>
</insert>

<select id="TAS01" resultType="java.util.HashMap">
--.TAS01 ID 중복 체크
--^
<![CDATA[

WITH TMP_ACC AS
 (
  SELECT A.H_USER_ID H_USER_ID
    FROM (
          SELECT COALESCE(TRIM(#{USER_ID}), '') H_USER_ID
--          SELECT COALESCE(TRIM('admin'), '') H_USER_ID
         ) A
 )
SELECT CASE
         WHEN B.USER_ID IS NOT NULL THEN TRUE
         ELSE                            FALSE
       END                                     IS_DUPLICATE
  FROM TMP_ACC A
      LEFT OUTER JOIN
       USERS B
      ON B.USER_ID = A.H_USER_ID
      ;

]]>
</select>

<select id="TAS02" resultType="java.util.HashMap">
--.TAS02 ID 로그인 체크
--^
<![CDATA[

WITH TMP_ACC AS
 (
  SELECT A.H_USER_ID H_USER_ID
        ,A.H_USER_PW H_USER_PW
    FROM (
          SELECT COALESCE(TRIM(#{USER_ID}), '') H_USER_ID
                ,COALESCE(TRIM(#{USER_PW}), '') H_USER_PW
--          SELECT COALESCE(TRIM('admin'), '') H_USER_ID
--                ,COALESCE(TRIM('admin'), '') H_USER_PW
         ) A
 )
SELECT CASE
         WHEN B.USER_ID IS NOT NULL THEN TRUE
         ELSE                            FALSE
       END                                     LOGIN_RES
  FROM TMP_ACC A
      LEFT OUTER JOIN
       USERS B
      ON    B.USER_ID = A.H_USER_ID
        AND B.USER_PW = A.H_USER_PW
        AND B.STATUS  = 'A'
        ;

]]>
</select>
</mapper>